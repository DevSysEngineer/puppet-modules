#!/bin/sh

# Managed by puppet

die() {
    printf 'UNKNOWN - %s\n' "$*" >&2
    exit 3
}

# Locate date
DATE=$(command -v date 2>/dev/null)
[ -n "$DATE" ] || die "date not available"

# Locate systemctl
SYSTEMCTL=$(command -v systemctl 2>/dev/null)
[ -n "$SYSTEMCTL" ] || die "systemctl not available"

# Arguments
TIMER_UNIT="$1"
[ -n "$TIMER_UNIT" ] || die "No timer given"
SERVICE_UNIT="${TIMER_UNIT%.timer}.service"

# Existence & state checks
$SYSTEMCTL list-unit-files | grep -q "^${TIMER_UNIT}" || {
    echo "CRITICAL - ${TIMER_UNIT} does not exist | last_run_age=U exit_code=U"
    exit 2
}
$SYSTEMCTL is-active --quiet "$TIMER_UNIT" || {
    echo "CRITICAL - ${TIMER_UNIT} is not active | last_run_age=U exit_code=U"
    exit 2
}

# Try to get last run & result 
LAST_RUN=$($SYSTEMCTL show "$TIMER_UNIT" -p LastTriggerUSec --value | xargs)
if [ -z "$LAST_RUN" ] || [ "$LAST_RUN" = "0" ]; then
    echo "WARNING - ${TIMER_UNIT} has never been triggered | last_run_age=U exit_code=U"
    exit 1
fi

# Get result
RESULT=$($SYSTEMCTL show "$SERVICE_UNIT" -p Result --value)
EXIT_CODE=$($SYSTEMCTL show "$SERVICE_UNIT" -p ExecMainStatus --value)

# Perfdata
LAST_RUN_TS=$($DATE -d "$LAST_RUN" +%s 2>/dev/null)
NOW_TS=$($DATE +%s)
if [ -n "$LAST_RUN_TS" ]; then
    LAST_RUN_AGE=$((NOW_TS - LAST_RUN_TS))
else
    LAST_RUN_AGE=U
fi
PERFDATA="last_run_age=${LAST_RUN_AGE}s exit_code=${EXIT_CODE}"

# Output & exit
case "${RESULT},${EXIT_CODE}" in
    success,0)
        echo "OK - ${SERVICE_UNIT} successful; last run: ${LAST_RUN} | ${PERFDATA}"
        exit 0 ;;
    *)
        echo "CRITICAL - ${SERVICE_UNIT} failed (Result=${RESULT}, Exit=${EXIT_CODE}); last run: ${LAST_RUN} | ${PERFDATA}"
        exit 2 ;;
esac